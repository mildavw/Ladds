map = new Array();

map.add_edge = function(p1,p2) {
  if (typeof(this[p1]) == 'undefined') {
    this[p1] = [p2]
  } else {
    this[p1].push(p2)
  }
}

function b(p1,p2) {
  map.add_edge(p1,p2);
  map.add_edge(p2,p1);
}

streets = new Array();

function s(p1,p2) {
  map.add_edge(p1,p2);
  map.add_edge(p2,p1); 
  streets.push([p1,p2].sort().toString());
}

// border edges
b( 1,  2);     b(11, 20);     b(87, 94);
b( 1, 11);     b(13, 24);     b(91, 99);
b( 2,  3);     b(20, 44);     b(94, 95);
b( 3,  4);     b(24, 59);     b(95, 96);
b( 4,  5);     b(44, 81);     b(96, 97);
b( 5,  6);     b(59, 83);     b(97, 98);
b( 6,  7);     b(81, 87);     b(98, 99);
b( 7, 13);     b(83, 91);

// street edges
s( 1, 12);     s(25, 29);     s(46, 68);     s(69, 72);
s( 2, 21);     s(26, 29);     s(47, 48);     s(69, 76);
s( 3,  8);     s(27, 34);     s(47, 65);     s(70, 74);
s( 4,  9);     s(27, 45);     s(48, 60);     s(70, 87);
s( 5, 10);     s(28, 32);     s(49, 50);     s(71, 77);
s( 6, 23);     s(28, 40);     s(49, 60);     s(71, 78);
s( 7, 30);     s(29, 36);     s(50, 51);     s(72, 75);
s( 8,  9);     s(30, 33);     s(50, 70);     s(72, 91);
s( 8, 14);     s(30, 42);     s(51, 61);     s(73, 81);
s( 9, 10);     s(31, 35);     s(52, 53);     s(74, 79);
s( 9, 15);     s(31, 58);     s(52, 62);     s(74, 94);
s(10, 16);     s(32, 34);     s(53, 54);     s(75, 80);
s(11, 12);     s(32, 50);     s(53, 72);     s(75, 99);
s(11, 32);     s(33, 35);     s(54, 63);     s(76, 83);
s(12, 28);     s(33, 53);     s(55, 56);     s(77, 82);
s(13, 33);     s(34, 37);     s(55, 63);     s(77, 84);
s(14, 15);     s(34, 46);     s(56, 57);     s(78, 82);
s(14, 17);     s(35, 38);     s(56, 66);     s(78, 86);
s(15, 16);     s(35, 57);     s(57, 58);     s(79, 84);
s(15, 18);     s(36, 41);     s(57, 69);     s(80, 86);
s(16, 19);     s(37, 39);     s(58, 59);     s(80, 98);
s(17, 18);     s(37, 47);     s(58, 76);     s(82, 85);
s(17, 21);     s(38, 43);     s(60, 65);     s(84, 85);
s(17, 25);     s(38, 56);     s(61, 64);     s(84, 88);
s(18, 19);     s(39, 48);     s(61, 74);     s(85, 86);
s(18, 22);     s(39, 49);     s(62, 64);     s(85, 89);
s(19, 23);     s(40, 41);     s(62, 75);     s(86, 90);
s(19, 26);     s(40, 51);     s(63, 66);     s(88, 89);
s(20, 27);     s(41, 42);     s(64, 67);     s(88, 92);
s(21, 28);     s(42, 52);     s(65, 68);     s(89, 90);
s(21, 36);     s(43, 54);     s(66, 69);     s(89, 93);
s(22, 25);     s(43, 55);     s(67, 71);     s(90, 97);
s(22, 26);     s(44, 45);     s(67, 79);     s(92, 93);
s(23, 30);     s(45, 46);     s(67, 80);     s(92, 95);
s(23, 36);     s(45, 73);     s(68, 70);     s(93, 96);
s(24, 31);     s(46, 47);     s(68, 73);

starting_and_ending_nodes = [40, 41, 42, 51, 52, 61, 62, 64]

map.coords = {
   1:  [ 34, 28],    26:  [340,198],    51:  [273,368],    76:  [561,532],
   2:  [ 92, 28],    27:  [ 62,212],    52:  [351,376],    77:  [282,548],
   3:  [150, 28],    28:  [176,206],    53:  [376,372],    78:  [339,548],
   4:  [315, 28],    29:  [312,227],    54:  [431,373],    79:  [213,561],
   5:  [477, 28],    30:  [447,213],    55:  [471,373],    80:  [411,567],
   6:  [535, 28],    31:  [558,213],    56:  [495,373],    81:  [ 16,576],
   7:  [593, 28],    32:  [140,234],    57:  [522,371],    82:  [311,574],
   8:  [175, 58],    33:  [484,238],    58:  [563,371],    83:  [604,581],
   9:  [315, 58],    34:  [103,264],    59:  [602,374],    84:  [247,592],
  10:  [448, 58],    35:  [518,265],    60:  [167,403],    85:  [309,600],
  11:  [ 25, 82],    36:  [312,290],    61:  [286,403],    86:  [375,593],
  12:  [ 74, 82],    37:  [136,304],    62:  [339,403],    87:  [ 15,649],
  13:  [605, 99],    38:  [489,296],    63:  [454,402],    88:  [208,641],
  14:  [215,106],    39:  [171,339],    64:  [311,409],    89:  [309,644],
  15:  [315,106],    40:  [283,341],    65:  [136,439],    90:  [410,642],
  16:  [416,106],    41:  [313,335],    66:  [483,439],    91:  [601,651],
  17:  [245,154],    42:  [339,346],    67:  [309,449],    92:  [170,685],
  18:  [315,142],    43:  [453,343],    68:  [100,477],    93:  [306,687],
  19:  [377,154],    44:  [ 13,368],    69:  [521,482],    94:  [ 23,719],
  20:  [ 25,166],    45:  [ 56,368],    70:  [137,503],    95:  [137,726],
  21:  [215,178],    46:  [ 96,368],    71:  [309,518],    96:  [309,728],
  22:  [315,170],    47:  [131,368],    72:  [482,508],    97:  [482,729],
  23:  [412,178],    48:  [147,368],    73:  [ 57,532],    98:  [539,725],
  24:  [605,170],    49:  [191,368],    74:  [177,534],    99:  [602,722],
  25:  [283,196],    50:  [245,368],    75:  [445,536]
};

canvas = $('#map_canvas')[0];
if (canvas.getContext) {
  ctx = canvas.getContext('2d');
  ctx.lineWidth = 3;
  ctx.strokeStyle = "#f00";
}

drawPath = function(path) {
  var points = new Array();
  for(var i=0;i<path.length;i++) {
    points.push([map.coords[path[i]][0],map.coords[path[i]][1]])
  }

  var corners = new Array;
  var radius = 10;
  for(i=points.length-2;i>0;i--) {
    var a = points[i-1];
    var b = points[i];
    var c = points[i+1];
    var b1 = shorten_edge(a,b,radius);
    var b2 = shorten_edge(c,b,radius);
    corners[i] = [b1,b2];
  }

  for(i=points.length-2;i>0;i--) {
    points.splice(i,1,corners[i][0],corners[i][1])
  }

  ctx.moveTo(points[0][0],points[0][1]);
  for(var i=1;i<points.length;i++) {
    ctx.lineTo(points[i][0],points[i][1]);
  }
  ctx.stroke();
}

function shorten_edge(a,b,r) {
  var c = [b[0],b[1]];
  if (a[0] == b[0]) {
    c[1] = b[1] + (1-2*(a[1]<b[1]))*r;
  } else if (a[1] == b[1]) {
    c[0] = b[0] + (1-2*(a[0]<b[0]))*r;
  } else {
    var m = (b[1]-a[1])/(b[0]-a[0]);
    var mx = Math.round(r*Math.sqrt(1/(1+m*m)));
    var my = Math.round(r*Math.sqrt(1/(1+1/(m*m))));
    c[0] = b[0] + (1-2*(a[0]<b[0]))*mx;
    c[1] = b[1] + (1-2*(m<0))*(1-2*(a[0]<b[0]))*my;
  }
  return c;
}